% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04_tile_genome.R
\name{tile_genome}
\alias{tile_genome}
\title{Generate Fixed-Width Windows by Tiling a Genome}
\usage{
tile_genome(genome, window_size, blacklist = NULL)
}
\arguments{
\item{genome}{A \link[GenomeInfoDb:Seqinfo-class]{GenomeInfoDb::Seqinfo} object defining the genome to tile.}

\item{window_size}{Integer. Width of each tile (e.g., 10000 for 10kb windows).}

\item{blacklist}{Optional \link[GenomicRanges:GRanges-class]{GenomicRanges::GRanges} object. If provided, overlapping tiles
will be annotated with \code{blacklist = TRUE}.}
}
\value{
A \link[GenomicRanges:GRanges-class]{GenomicRanges::GRanges} object representing tiled windows. Includes a
\code{blacklist} column if \code{blacklist} is provided.
}
\description{
Generate fixed-size, non-overlapping windows (tiles) across a genome defined by a
\link[GenomeInfoDb:Seqinfo-class]{GenomeInfoDb::Seqinfo} object. If a blacklist is provided, each tile is annotated
with a logical \code{blacklist} column indicating whether it overlaps any blacklisted region.
}
\examples{
genome_file <- system.file("extdata", "genome.txt", package = "chromcall")
genome <- load_genome(genome_file)

# Generate 10kb windows without blacklist
tiles <- tile_genome(genome, window_size = 10000)
tiles

# Generate 10kb windows with blacklist
blacklist_file <- system.file("extdata", "blacklist.bed", package = "chromcall")
blacklist <- load_bedfile(blacklist_file, genome = genome)
tiles_with_bl <- tile_genome(genome, window_size = 10000, blacklist = blacklist)
tiles_with_bl

}
