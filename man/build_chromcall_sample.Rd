% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/09_build_chromcall_sample.R
\name{build_chromcall_sample}
\alias{build_chromcall_sample}
\title{Create a chromcall sample from input files}
\usage{
build_chromcall_sample(
  sample_name,
  experiments,
  control_name,
  genome_file,
  region_file,
  window_size,
  blacklist_file = NULL,
  expression_file = NULL
)
}
\arguments{
\item{sample_name}{The name of the sample (string).}

\item{experiments}{A named list of BAM file paths for each experiment (e.g., H3K27me3, H3K4me3, control).}

\item{control_name}{The name (matching \code{names(experiments)}) of the experiment to treat as control.}

\item{genome_file}{Path to the genome info text file.}

\item{region_file}{Path to the promoter BED file.}

\item{window_size}{Genome tile size in base pairs.}

\item{blacklist_file}{(Optional) Path to BED file of blacklist regions, or NULL to disable.}

\item{expression_file}{(Optional) Path to a BED-format TSS expression file to merge expression into regions.}
}
\value{
A \link[SummarizedExperiment:RangedSummarizedExperiment-class]{SummarizedExperiment::SummarizedExperiment} object containing region counts and lambda estimates.
}
\description{
Constructs a single-sample \link{SummarizedExperiment} object by loading multiple ChIP/CUT&RUN experiments
with a shared genome, promoter windows, and blacklist information. Computes per-experiment background lambda.
}
\examples{
# Define input files
genome_file <- system.file("extdata", "genome.txt", package = "chromcall")
region_file <- system.file("extdata", "example.bed", package = "chromcall")
blacklist_file <- system.file("extdata", "blacklist.bed", package = "chromcall")

# Define BAM files for sample A
bam_dir <- system.file("extdata", package = "chromcall")
experiments <- list(
  H3K27me3 = file.path(bam_dir, "h3k27me3_sampleA.bam"),
  H3K4me3  = file.path(bam_dir, "h3k4me3_sampleA.bam"),
  Control  = file.path(bam_dir, "control_sampleA.bam")
)

# Create sample object
sample <- build_chromcall_sample(
  sample_name = "sampleA",
  experiments = experiments,
  control_name = "Control",
  genome_file = genome_file,
  region_file = region_file,
  window_size = 10000,
  blacklist_file = blacklist_file,
  expression_file = system.file("extdata", "expression_tss.bed", package = "chromcall")
  )

# Explore output
sample
SummarizedExperiment::assayNames(sample)
SummarizedExperiment::colData(sample)
head(SummarizedExperiment::assay(sample, "counts"))
head(SummarizedExperiment::rowData(sample)$expression)

}
